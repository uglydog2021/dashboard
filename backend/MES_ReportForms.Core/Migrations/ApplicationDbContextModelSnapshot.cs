// <auto-generated />
using System;
using MES_ReportForms.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MES_ReportForms.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Chat.ChatChannelEntity", b =>
                {
                    b.Property<string>("ChannelId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ChannelId");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<int?>("CustomerStatus")
                        .HasColumnType("int")
                        .HasComment("客户的在线状态");

                    b.Property<int>("QueueMessageCount")
                        .HasColumnType("int")
                        .HasComment("排队消息数");

                    b.Property<DateTime?>("SessionStartTime")
                        .HasColumnType("datetime2")
                        .HasComment("会话开始时间");

                    b.Property<string>("ShipToName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("门店名称");

                    b.Property<string>("ShipToNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("门店号");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("频道排队会话状态");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用户ID");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用户名");

                    b.Property<string>("UserPhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("电话号码");

                    b.HasKey("ChannelId");

                    b.ToTable("ChatChannel", null, t =>
                        {
                            t.HasComment("Chat频道");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Chat.ChatMemberEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChannelId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ChannelId");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("ShipToNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("门店号");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用户ID");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用户名");

                    b.Property<string>("UserType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用户类型");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId")
                        .HasDatabaseName("IX_ChatMember_ChannelId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_ChatMember_UserId");

                    b.ToTable("ChatMember", null, t =>
                        {
                            t.HasComment("Chat成员");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Chat.ChatMessageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<string>("ChannelId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("ChannelId");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("消息内容");

                    b.Property<DateTime>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("消息时间");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用户ID");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用户名");

                    b.Property<string>("UserType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用户类型");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId")
                        .HasDatabaseName("IX_ChatMessage_ChannelId");

                    b.ToTable("ChatMessage", null, t =>
                        {
                            t.HasComment("Chat成员");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Customer.CustomerEntity", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("客户ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("客户编码");

                    b.Property<string>("CustomerEnName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("客户英文名称");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("客户名称");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("电话号码");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer", null, t =>
                        {
                            t.HasComment("客户");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Customer.ShipToEntity", b =>
                {
                    b.Property<string>("ShipToNumber")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("newid()")
                        .HasComment("门店号");

                    b.Property<bool>("CanNonInventory")
                        .HasColumnType("bit")
                        .HasComment("是否允许无库存下单");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("客户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<int>("MaterialConstraintType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasComment("物料约束类型（1:全部物料有效，但如有配置的物料规则，规则优先。 2:仅配置物料的有效）");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("ShipToAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("门店地址");

                    b.Property<string>("ShipToEnAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("门店英文地址");

                    b.Property<string>("ShipToEnName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("门店英文名称");

                    b.Property<string>("ShipToName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("门店名称");

                    b.Property<bool>("ShowInventory")
                        .HasColumnType("bit")
                        .HasComment("是否显示库存");

                    b.Property<bool>("ShowPrice")
                        .HasColumnType("bit");

                    b.HasKey("ShipToNumber");

                    b.HasIndex("CustomerId");

                    b.ToTable("ShipTo", null, t =>
                        {
                            t.HasComment("门店");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Material.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("物料类型ID");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("商品类型编号");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("类型名称");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.HasKey("Id");

                    b.ToTable("Category", null, t =>
                        {
                            t.HasComment("商品类型");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Material.CustomerMOAEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("物料类型ID");

                    b.Property<decimal>("ConstraintQuantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("起送数量");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<int?>("MOAType")
                        .HasColumnType("int");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("物料ID");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("ShipToNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("门店号");

                    b.HasKey("Id");

                    b.ToTable("CustomerMOA", null, t =>
                        {
                            t.HasComment("起始要求配置");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Material.CustomerMaterialEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<bool?>("CanNonInventory")
                        .HasColumnType("bit")
                        .HasComment("是否允许无库存下单");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<decimal?>("CustomerPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("客户单价");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("物料ID");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("ShipToNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("门店号");

                    b.Property<bool?>("ShowInventory")
                        .HasColumnType("bit")
                        .HasComment("是否显示库存");

                    b.Property<bool?>("ShowPrice")
                        .HasColumnType("bit")
                        .HasComment("是否显示单价");

                    b.HasKey("Id");

                    b.ToTable("CustomerMaterial", null, t =>
                        {
                            t.HasComment("客户的物料");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Material.DeliveryMethodEntity", b =>
                {
                    b.Property<Guid>("DeliveryMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("主键ID");

                    b.Property<decimal?>("Cost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("配送费用");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<int?>("DeliveryTime")
                        .HasColumnType("int")
                        .HasComment("配送时效");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<bool>("IsNeedSalesReview")
                        .HasColumnType("bit")
                        .HasComment("是否需要销售审核");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("配送方式");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryMethodId");

                    b.ToTable("DeliveryMethod", null, t =>
                        {
                            t.HasComment("仓库");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Material.InventoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("仓库ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("LatestTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("最后更新时间");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("物料ID");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<decimal?>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("当前库存量");

                    b.Property<string>("WareHouse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("仓库");

                    b.HasKey("Id");

                    b.ToTable("Inventory", null, t =>
                        {
                            t.HasComment("仓库");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Material.QuotaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("配额ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("物料ID");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<decimal?>("Quantity")
                        .IsRequired()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("数量");

                    b.Property<string>("ShipToNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("门店号");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("配额状态");

                    b.HasKey("Id");

                    b.ToTable("Quota", null, t =>
                        {
                            t.HasComment("配额");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.MaterialEntity", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("物料ID");

                    b.Property<Guid>("CategoryId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("物料类型代码");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("物料描述");

                    b.Property<string>("Epithet")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("别称，可多个别称，逗号分割");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<bool>("IsGlobal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("是否全局");

                    b.Property<string>("MaterialCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("物料编码");

                    b.Property<string>("MaterialEnName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("物料英文名称");

                    b.Property<string>("MaterialZhName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("物料中文名称");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("Picture")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("图片URL");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("单价");

                    b.Property<string>("Specifications")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("规格");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("计量单位");

                    b.HasKey("MaterialId");

                    b.ToTable("Material", null, t =>
                        {
                            t.HasComment("物料");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Order.FixedOrderMaterialEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<Guid?>("MaterialId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("物料商品ID");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("物料数量");

                    b.Property<Guid>("RequestId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("固定订单申请ID");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("FixedOrderMaterial", null, t =>
                        {
                            t.HasComment("固定订单申请的物料清单");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Order.FixedOrderRequestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("固定订单申请ID");

                    b.Property<string>("Config")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("配置内容（程序内定义的JSON文本内容）");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("客户名称");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注");

                    b.Property<string>("ShipToNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("门店号");

                    b.HasKey("Id");

                    b.ToTable("FixedOrderRequest", null, t =>
                        {
                            t.HasComment("固定订单申请");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Order.OrderEntity", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("表主键");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2")
                        .HasComment("订单关闭日期");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("客户ID");

                    b.Property<string>("CustomerPoNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("客户的采购单号");

                    b.Property<Guid?>("FixedOrderRequestId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("固定订单申请ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<bool?>("IsUrgent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否为紧急订单");

                    b.Property<int?>("IssueFlag")
                        .HasColumnType("int")
                        .HasComment("问题标识");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<Guid?>("OperatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("作业人员ID");

                    b.Property<decimal>("OrderAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("订单金额");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("订单号");

                    b.Property<int?>("OrderSource")
                        .HasColumnType("int")
                        .HasComment("订单来源");

                    b.Property<int?>("OrderStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10)
                        .HasComment("订单状态");

                    b.Property<int>("OrderType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasComment("订单类型");

                    b.Property<Guid?>("RDDId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("RDDId");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注");

                    b.Property<string>("SAPID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("对应SAP订单标识");

                    b.Property<string>("ShipToNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("门店号");

                    b.Property<Guid?>("UrgentLogistics")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("紧急订单配送方式");

                    b.Property<string>("UrgentRDD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("紧急订单指定车期");

                    b.HasKey("OrderId");

                    b.ToTable("Order", null, t =>
                        {
                            t.HasComment("订单");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Order.OrderLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<int?>("AfterOrderStatus")
                        .HasColumnType("int")
                        .HasComment("后来状态");

                    b.Property<int?>("BeforeOrderStatus")
                        .HasColumnType("int")
                        .HasComment("原来状态");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<string>("From")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("来自某用户或系统的名称");

                    b.Property<int?>("FromUserType")
                        .HasColumnType("int")
                        .HasComment("用户类型");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<int>("LogType")
                        .HasColumnType("int")
                        .HasComment("订单日志类型");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("订单号");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注");

                    b.HasKey("Id");

                    b.HasIndex("LogType");

                    b.HasIndex("OrderNo");

                    b.ToTable("OrderLog", null, t =>
                        {
                            t.HasComment("订单日志");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Order.OrderMaterialEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("订单商品明细ID");

                    b.Property<int>("Classification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasComment("正常下单的物料（1:正常下单的物料 2：配额添加的物料 3:促销）");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("物料ID");

                    b.Property<string>("MaterialName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("物料名称");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("订单号");

                    b.Property<decimal?>("OriginalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("原价");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("数量");

                    b.Property<decimal?>("RealPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("实际售价");

                    b.HasKey("Id");

                    b.HasIndex("OrderNo");

                    b.ToTable("OrderMaterial", null, t =>
                        {
                            t.HasComment("订单物料商品");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Order.ReturnOrderLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注");

                    b.Property<string>("ReturnOrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("退换货订单号");

                    b.HasKey("Id");

                    b.ToTable("ReturnOrderLog", null, t =>
                        {
                            t.HasComment("退换货订单日志");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.RDD.RDDDataEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<Guid>("ConfigId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("车期配置ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<DateTime>("NextDeliveryDay")
                        .HasColumnType("datetime2")
                        .HasComment("车期日期");

                    b.HasKey("Id");

                    b.ToTable("RDDData", null, t =>
                        {
                            t.HasComment("车期数据");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.RDD.RequiredDeliveryDateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("车期ID");

                    b.Property<bool>("AutoCreateSchedule")
                        .HasColumnType("bit")
                        .HasComment("自动创建车期");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("线路类型Id");

                    b.Property<string>("Config")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("配置内容（程序内定义的JSON文本内容）");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("Plant")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Plant");

                    b.Property<string>("RouteName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("线路名称");

                    b.Property<string>("RouteNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("线程编号");

                    b.Property<string>("ShipToNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("门店号");

                    b.HasKey("Id");

                    b.ToTable("RequiredDeliveryDate", null, t =>
                        {
                            t.HasComment("车期");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.RE.ReturnMaterialEntity", b =>
                {
                    b.Property<Guid>("ReturnMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("物料ID");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("退/换货数量");

                    b.Property<Guid>("ReturnOrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("退/换货主表外键");

                    b.HasKey("ReturnMaterialId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ReturnOrderId");

                    b.ToTable("ReturnMaterial", null, t =>
                        {
                            t.HasComment("退换货物料");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.RE.ReturnOrderEntity", b =>
                {
                    b.Property<Guid>("ReturnOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<int>("Classification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasComment("退换货类型（1:退货 2:换货）");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<string>("CustomerPoNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("PO.No");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("OrderNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("换货订单号");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注");

                    b.Property<string>("ReturnOrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("退货单号");

                    b.Property<string>("ShipToNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("门店号");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("状态");

                    b.HasKey("ReturnOrderId");

                    b.ToTable("ReturnOrder", null, t =>
                        {
                            t.HasComment("退换货物料");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.System.CustomerUserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("ShipToNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("门店号");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("用户ID");

                    b.HasKey("Id");

                    b.ToTable("CustomerUser", null, t =>
                        {
                            t.HasComment("客户门店与用户绑定关系");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.System.GroupEntity", b =>
                {
                    b.Property<Guid>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("组ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("组名");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.HasKey("GroupId");

                    b.ToTable("Group", null, t =>
                        {
                            t.HasComment("组");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.System.GroupMenuEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("组ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("菜单ID");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.HasKey("Id");

                    b.ToTable("GroupMenu", null, t =>
                        {
                            t.HasComment("用户组分配的菜单权限");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.System.GroupUserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("组ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("用户ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GroupUser", null, t =>
                        {
                            t.HasComment("用户与组关联");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.System.MenuEntity", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("菜单ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<string>("Event")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("触发事件(前端应用是路由地址，非Web应用可以定义事件Key)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("图标样式(如fa fa-cog)");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("名称");

                    b.Property<Guid?>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("菜单ID");

                    b.Property<string>("Short")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("简称");

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("排序");

                    b.HasKey("MenuId");

                    b.ToTable("Menu", null, t =>
                        {
                            t.HasComment("菜单");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.System.UserEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()")
                        .HasComment("用户ID");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("创建用户ID");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否已删除");

                    b.Property<bool?>("IsDisabled")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否被禁用");

                    b.Property<DateTime?>("ModifierDate")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModifierUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改用户ID");

                    b.Property<string>("Password")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("密码");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("电话号码");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("相片地址");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用户登录账号");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用户名");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasComment("用户类型");

                    b.HasKey("UserId");

                    b.ToTable("User", null, t =>
                        {
                            t.HasComment("用户");
                        });
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Chat.ChatMemberEntity", b =>
                {
                    b.OwnsOne("MES_ReportForms.Core.Entities.Chat.MessageReadStatVO", "ReadStat", b1 =>
                        {
                            b1.Property<int>("ChatMemberEntityId")
                                .HasColumnType("int");

                            b1.Property<string>("ReadedMessageId")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("ReadedMessageId")
                                .HasComment("已读的MessageId");

                            b1.Property<DateTime?>("ReadedMessageTime")
                                .HasColumnType("datetime2")
                                .HasColumnName("ReadedMessageTime")
                                .HasComment("已读消息的时间");

                            b1.Property<int>("UnreadNumber")
                                .HasColumnType("int")
                                .HasColumnName("UnreadNumber")
                                .HasComment("未读数");

                            b1.HasKey("ChatMemberEntityId");

                            b1.ToTable("ChatMember");

                            b1.WithOwner()
                                .HasForeignKey("ChatMemberEntityId");
                        });

                    b.Navigation("ReadStat");
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Customer.ShipToEntity", b =>
                {
                    b.HasOne("MES_ReportForms.Core.Entities.Customer.CustomerEntity", "Customer")
                        .WithMany("ShipTos")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Order.FixedOrderMaterialEntity", b =>
                {
                    b.HasOne("MES_ReportForms.Core.Entities.Order.FixedOrderRequestEntity", null)
                        .WithMany("Materials")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Order.OrderMaterialEntity", b =>
                {
                    b.HasOne("MES_ReportForms.Core.Entities.Order.OrderEntity", null)
                        .WithMany("Materials")
                        .HasForeignKey("OrderNo")
                        .HasPrincipalKey("OrderNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.RE.ReturnMaterialEntity", b =>
                {
                    b.HasOne("MES_ReportForms.Core.Entities.MaterialEntity", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MES_ReportForms.Core.Entities.RE.ReturnOrderEntity", null)
                        .WithMany("ReturnMaterials")
                        .HasForeignKey("ReturnOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.System.GroupUserEntity", b =>
                {
                    b.HasOne("MES_ReportForms.Core.Entities.System.UserEntity", null)
                        .WithMany("GroupUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Customer.CustomerEntity", b =>
                {
                    b.Navigation("ShipTos");
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Order.FixedOrderRequestEntity", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.Order.OrderEntity", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.RE.ReturnOrderEntity", b =>
                {
                    b.Navigation("ReturnMaterials");
                });

            modelBuilder.Entity("MES_ReportForms.Core.Entities.System.UserEntity", b =>
                {
                    b.Navigation("GroupUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
